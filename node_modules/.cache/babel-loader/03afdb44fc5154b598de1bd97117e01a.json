{"ast":null,"code":"import _objectSpread from \"D:\\\\node-js\\\\react-crud-api-call\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\node-js\\\\react-crud-api-call\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\node-js\\\\react-crud-api-call\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\node-js\\\\react-crud-api-call\\\\src\\\\AppHook.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport List from \"./components/task/List\";\nimport Form from \"./components/task/Form\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { getList, addItem, updateItem, deleteItem } from \"./function/ListFunctions\";\n\nfunction AppHook() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  var _useState5 = useState({\n    id: \"\",\n    title: \"\",\n    description: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      form = _useState6[0],\n      setForm = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  useEffect(function () {\n    getAll();\n  }, []); // Get all data\n\n  var getAll = function getAll() {\n    getList().then(function (data) {\n      setItems(_toConsumableArray(data));\n    });\n  }; // clear all input form\n\n\n  var clearForm = function clearForm() {\n    setForm({\n      id: \"\",\n      title: \"\",\n      description: \"\"\n    });\n    setEditMode(false);\n  }; // Handle on change input\n\n\n  var onChange = function onChange(name, value) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [name]: value\n    }));\n  }; // Save data\n\n\n  var onCreate = function onCreate() {\n    setIsLoading(true);\n    addItem(form).then(function () {\n      getAll();\n      setIsLoading(false);\n    }).catch(function (error) {\n      setIsLoading(false);\n      alert(error);\n    });\n    clearForm();\n  }; // Show data into edit form\n\n\n  var onEdit = function onEdit(itemid) {\n    var item = items[itemid];\n    setForm(item);\n    setEditMode(true);\n  }; // Save edit data\n\n\n  var onUpdate = function onUpdate() {\n    setIsLoading(true);\n    updateItem(form).then(function () {\n      getAll();\n      setIsLoading(false);\n    }).catch(function (error) {\n      setIsLoading(false);\n      alert(error);\n    });\n    clearForm();\n  }; // Delete data\n\n\n  var onDelete = function onDelete(val) {\n    setIsLoading(true);\n    deleteItem(val).then(function () {\n      getAll();\n      setIsLoading(false);\n    }).catch(function (error) {\n      setIsLoading(false);\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading your content...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(Form, {\n    editMode: editMode,\n    item: form,\n    onCreate: onCreate,\n    onChange: onChange,\n    onUpdate: onUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    editMode: editMode,\n    items: items,\n    onEdit: onEdit,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default AppHook;","map":{"version":3,"sources":["D:/node-js/react-crud-api-call/src/AppHook.js"],"names":["React","useState","useEffect","List","Form","LoadingOverlay","getList","addItem","updateItem","deleteItem","AppHook","editMode","setEditMode","items","setItems","id","title","description","form","setForm","isLoading","setIsLoading","getAll","then","data","clearForm","onChange","name","value","onCreate","catch","error","alert","onEdit","itemid","item","onUpdate","onDelete","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport List from \"./components/task/List\";\nimport Form from \"./components/task/Form\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nimport {\n  getList,\n  addItem,\n  updateItem,\n  deleteItem\n} from \"./function/ListFunctions\";\n\nfunction AppHook() {\n  const [editMode, setEditMode] = useState(false);\n  const [items, setItems] = useState([]);\n  const [form, setForm] = useState({\n    id: \"\",\n    title: \"\",\n    description: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  // Get all data\n  const getAll = () => {\n    getList().then(data => {\n      setItems([...data]);\n    });\n  };\n\n  // clear all input form\n  const clearForm = () => {\n    setForm({ id: \"\", title: \"\", description: \"\" });\n    setEditMode(false);\n  };\n\n  // Handle on change input\n  const onChange = (name, value) => {\n    setForm({ ...form, [name]: value });\n  };\n\n  // Save data\n  const onCreate = () => {\n    setIsLoading(true);\n\n    addItem(form)\n      .then(() => {\n        getAll();\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        alert(error);\n      });\n\n    clearForm();\n  };\n\n  // Show data into edit form\n  const onEdit = itemid => {\n    var item = items[itemid];\n    setForm(item);\n    setEditMode(true);\n  };\n\n  // Save edit data\n  const onUpdate = () => {\n    setIsLoading(true);\n\n    updateItem(form)\n      .then(() => {\n        getAll();\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        alert(error);\n      });\n\n    clearForm();\n  };\n\n  // Delete data\n  const onDelete = val => {\n    setIsLoading(true);\n\n    deleteItem(val)\n      .then(() => {\n        getAll();\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        alert(error);\n      });\n  };\n\n  return (\n    <LoadingOverlay active={isLoading} spinner text=\"Loading your content...\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mx-auto\">\n            <br />\n            <h1 className=\"text-center\">Todo List</h1>\n            <Form\n              editMode={editMode}\n              item={form}\n              onCreate={onCreate}\n              onChange={onChange}\n              onUpdate={onUpdate}\n            />\n            <List\n              editMode={editMode}\n              items={items}\n              onEdit={onEdit}\n              onDelete={onDelete}\n            />\n          </div>\n        </div>\n      </div>\n    </LoadingOverlay>\n  );\n}\n\nexport default AppHook;\n"]},"metadata":{},"sourceType":"module"}